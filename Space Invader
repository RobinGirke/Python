import pygame
import random
import math
from pygame import mixer

# initialisier pygame
pygame.init()

# create the screen
screen = pygame.display.set_mode((800, 600))
# hintergrund
background = pygame.image.load('hintergrund.jpg')
mixer.music.load('background.wav')
mixer.music.play(-1)
# titel und icon
pygame.display.set_caption("Space Invaders")
icon = pygame.image.load('rocket.png')
pygame.display.set_icon(icon)

# Gegner
enemy_img = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
num_of_enemies = 6

for i in range(num_of_enemies):
    enemy_img.append(pygame.image.load('virus.png'))
    enemyX.append(random.randint(0, 735))
    enemyY.append(random.randint(50, 150))
    enemyX_change.append(4)
    enemyY_change.append(40)


def enemy(x, y, i):
    # .blit = zeichnen
    screen.blit(enemy_img[i], (x, y))


# kugel "ready" nicht sichtbar "fire" bewegt sich
bullet_img = pygame.image.load('gun.png')
bulletX = 0
bulletY = 480
bulletX_change = 0
bulletY_change = 10
bullet_state = "ready"


def fire_bullet(x, y):
    global bullet_state
    bullet_state = "fire"
    screen.blit(bullet_img, (x + 16, y + 20))


# player
player_img = pygame.image.load('spaceship.png')
playerX = 370
playerY = 480
playerX_change = 0

score_value = 0
font = pygame.font.Font('freesansbold.ttf', 32)
textX = 10
textY = 10


def show_score(x, y):
    score = font.render("Score:" + str(score_value), True, (255, 72, 0))
    screen.blit(score, (x, y))


# gameover text
over_font = pygame.font.Font('freesansbold.ttf', 64)


def game_over_text():
    over_text = over_font.render("GAME OVER", True, (255, 72, 0))
    screen.blit(over_text, (200, 250))


def player(x, y):
    # .blit = zeichnen
    screen.blit(player_img, (x, y))


def isCollision(enemyX, enemyY, bulletX, bulletY):
    distance = math.sqrt(math.pow(enemyX - bulletX, 2) + math.pow(enemyY - bulletY, 2))
    if distance < 27:
        return True
    else:
        return False


# game loop
running = True
while running:
    # hintergrund rgb wert
    screen.fill((0, 128, 0))
    # hintergrund bild
    screen.blit(background, (0, 0))
    # exit the loop, lässt das fenster offen mit schließungs möglichkeit
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        # tastatureingabe abfragen per event
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                playerX_change = -5
            if event.key == pygame.K_RIGHT:
                playerX_change = 5
            if event.key == pygame.K_SPACE:
                if bullet_state == "ready":
                    bullet_sound = mixer.Sound('laser.wav')
                    bullet_sound.play()
                    bulletX = playerX
                    fire_bullet(bulletX, bulletY)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                playerX_change = 0
    playerX += playerX_change
    # lässt das schiff nciht aus dem fenster fliegen
    if playerX <= 0:
        playerX = 0
    elif playerX >= 736:
        playerX = 736
    # Gegner bewegung
    for i in range(num_of_enemies):
        # gameover
        if enemyY[i] > 420:
            for j in range(num_of_enemies):
                enemyY[i] = 2000
                game_over_text()
                break
        if enemyX[i] <= 0:
            enemyX_change[i] = 4
            enemyY[i] += enemyY_change[i]
        elif enemyX[i] >= 736:
            enemyX_change[i] = -4
            enemyY[i] += enemyY_change[i]
        collision = isCollision(enemyX[i], enemyY[i], bulletX, bulletY)
        if collision:
            explosion_sound = mixer.Sound('explosion.wav')
            explosion_sound.play()
            bulletY = 480
            bullet_state = "ready"
            score_value += 1
            enemyX[i] = random.randint(0, 735)
            enemyY[i] = random.randint(50, 150)
        enemy(enemyX[i], enemyY[i], i)
        enemyX[i] += enemyX_change[i]

    # bullet movement
    if bulletY <= 0:
        bulletY = 480
        bullet_state = "ready"

    if bullet_state == "fire":
        fire_bullet(bulletX, bulletY)
        bulletY -= bulletY_change

    player(playerX, playerY)
    show_score(textX, textY)
    pygame.display.update()
